import numpy as np
import json

def save_json(data, path_with_filename):
    json_data = json.dumps(data)
    path_with_filename += '.json'
    with open(path_with_filename, 'w') as file:
        file.write(json_data)

def load_json(path_with_filename):
    path_with_filename += '.json'
    with open(path_with_filename, 'r') as file:
        data = json.load(file)
    
    return data

def cal_var_data(data1, data2):
    values1 = np.array(list(data1.values()))
    values2 = np.array(list(data2.values()))
    values = values1 - values2
    print(values)
    variance = np.var(values)
    print("data1和data2之间的方差:", variance)
    return variance

if __name__ == '__main__':
    #data2= {"step0": 11.643226623535156, "step1": 11.60155200958252, "step2": 11.506084442138672, "step3": 11.135108947753906, "step4": 10.237043380737305, "step5": 9.954730987548828, "step6": 8.954263687133789, "step7": 8.625105857849121, "step8": 8.127403259277344, "step9": 7.450435638427734, "step10": 7.244113445281982, "step11": 7.304502010345459, "step12": 6.823523044586182, "step13": 6.769433975219727, "step14": 6.7501301765441895, "step15": 6.846655368804932, "step16": 6.112556457519531, "step17": 7.285961627960205, "step18": 7.056284427642822, "step19": 6.660974502563477, "step20": 6.601715564727783, "step21": 7.033633232116699, "step22": 6.91205358505249, "step23": 6.309933662414551, "step24": 6.288717746734619, "step25": 6.540214538574219, "step26": 6.673343658447266, "step27": 6.515783309936523, "step28": 6.500109672546387, "step29": 6.16010856628418, "step30": 5.887735843658447, "step31": 6.0625200271606445, "step32": 5.829618453979492, "step33": 5.36249303817749, "step34": 6.136606693267822, "step35": 5.599326133728027, "step36": 5.823671340942383, "step37": 5.4833245277404785, "step38": 6.131040573120117, "step39": 5.414289474487305, "step40": 5.56423807144165, "step41": 5.978687286376953, "step42": 5.820801734924316, "step43": 5.704879283905029, "step44": 5.4009623527526855, "step45": 5.019592761993408, "step46": 4.809015274047852, "step47": 12.169679641723633, "step48": 8.064335823059082, "step49": 4.684755802154541, "step50": 3.517932653427124, "step51": 2.3787031173706055, "step52": 2.7965028285980225, "step53": 1.9768011569976807, "step54": 2.366692066192627, "step55": 0.8410749435424805, "step56": 1.5545103549957275, "step57": 0.9194399118423462, "step58": 1.672391414642334, "step59": 0.9498435854911804, "step60": 0.49026617407798767, "step61": 0.8072347640991211, "step62": 0.8289653062820435, "step63": 0.6609598398208618, "step64": 0.47864967584609985, "step65": 0.36502885818481445, "step66": 0.27282100915908813, "step67": 0.20488682389259338, "step68": 0.08975139260292053, "step69": 0.06947815418243408, "step70": 0.0865272656083107, "step71": 0.04165642336010933, "step72": 0.02276480570435524, "step73": 0.025023775175213814, "step74": 0.024312250316143036, "step75": 0.023862816393375397, "step76": 0.026792120188474655, "step77": 0.026060327887535095, "step78": 0.025177929550409317, "step79": 0.016795367002487183, "step80": 0.019114263355731964, "step81": 0.01594444550573826, "step82": 0.016140198335051537, "step83": 0.016935214400291443, "step84": 0.018251260742545128, "step85": 0.016413738951086998, "step86": 0.018773632124066353, "step87": 0.01634618639945984, "step88": 0.014969313517212868, "step89": 0.016332928091287613, "step90": 0.018694544211030006, "step91": 0.013588525354862213, "step92": 0.021492285653948784, "step93": 0.02179107628762722, "step94": 0.01798832416534424, "step95": 0.015652325004339218, "step96": 0.019305089488625526, "step97": 0.015363814309239388, "step98": 0.012928549200296402, "step99": 0.015398003160953522, "step100": 0.014220507815480232}
    #save_json(data2, 'data2')
    d1 = load_json('7B_loss_100')
    # change this to your own loss file
    # d2 = load_json('data2')
    d2 = load_json('7B_loss_100')
    variance = cal_var_data(d1, d2)
    #data4= {"step0": 10.558171272277832, "step1": 10.534730911254883, "step2": 10.27202320098877, "step3": 9.465755462646484, "step4": 7.752148151397705, "step5": 7.1310625076293945, "step6": 6.18742036819458, "step7": 5.976535797119141, "step8": 5.6273064613342285, "step9": 5.527626991271973, "step10": 5.297503471374512, "step11": 5.212550163269043, "step12": 5.166821479797363, "step13": 5.124434947967529, "step14": 5.000850200653076, "step15": 4.9429030418396, "step16": 4.923274993896484, "step17": 4.840307712554932, "step18": 4.812852382659912, "step19": 4.74418830871582, "step20": 4.718531131744385, "step21": 4.621601104736328, "step22": 4.567256927490234, "step23": 4.535375595092773, "step24": 4.463028907775879, "step25": 4.3659138679504395, "step26": 4.343064785003662, "step27": 4.259188175201416, "step28": 4.214497089385986, "step29": 4.14713716506958, "step30": 4.04151725769043, "step31": 4.009786605834961, "step32": 3.8992202281951904, "step33": 3.814919948577881, "step34": 3.7055439949035645, "step35": 3.718791961669922, "step36": 3.7083020210266113, "step37": 3.646573066711426, "step38": 3.4565823078155518, "step39": 3.437528133392334, "step40": 3.3014895915985107, "step41": 3.2174220085144043, "step42": 2.8951659202575684, "step43": 3.1730215549468994, "step44": 2.9857332706451416, "step45": 2.5791025161743164, "step46": 2.483966827392578, "step47": 2.101914644241333, "step48": 1.6999009847640991, "step49": 2.2355639934539795, "step50": 2.6477787494659424, "step51": 2.010127305984497, "step52": 1.5596829652786255, "step53": 1.3297828435897827, "step54": 1.276436686515808, "step55": 1.2067413330078125, "step56": 0.9324910640716553, "step57": 0.7179692983627319, "step58": 0.6270008683204651, "step59": 0.5558137893676758, "step60": 0.4189138114452362, "step61": 0.32699882984161377, "step62": 0.27104490995407104, "step63": 0.24254170060157776, "step64": 0.1602115035057068, "step65": 0.13332988321781158, "step66": 0.10095449537038803, "step67": 0.07614605128765106, "step68": 0.0643760934472084, "step69": 0.056110478937625885, "step70": 0.045970506966114044, "step71": 0.03866561874747276, "step72": 0.03447725623846054, "step73": 0.02899109199643135, "step74": 0.025900840759277344, "step75": 0.022128062322735786, "step76": 0.0199607964605093, "step77": 0.018127398565411568, "step78": 0.016503412276506424, "step79": 0.014879257418215275, "step80": 0.013930879533290863, "step81": 0.013459478504955769, "step82": 0.012274880893528461, "step83": 0.012048040516674519, "step84": 0.010904775001108646, "step85": 0.010573155246675014, "step86": 0.010404267348349094, "step87": 0.009861266240477562, "step88": 0.009378020651638508, "step89": 0.009130640886723995, "step90": 0.009161439724266529, "step91": 0.00859152339398861, "step92": 0.007981391623616219, "step93": 0.007999167777597904, "step94": 0.007535488810390234, "step95": 0.007292534690350294, "step96": 0.007392192725092173, "step97": 0.006927103269845247, "step98": 0.006691881455481052, "step99": 0.0068544852547347546, "step100": 0.006494436413049698}
    #save_json(data4, 'data4')
    d3 = load_json('65B_loss_100')
    # change this to your own loss file
    # d4 = load_json('data4')
    d4 = load_json('65B_loss_100')
    variance = cal_var_data(d3, d4)